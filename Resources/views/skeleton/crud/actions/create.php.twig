
    /**
     * Creates a new {{ entity }} entity.
     *
     * @PreAuthorize("hasRole('ROLE_EDITOR') or (hasRole('ROLE_ADMIN') and hasRole('ROLE_SUPER_ADMIN'))")
     * @return Response
     * @access public
     */
    public function createAction()
    {
        $em       = $this->getDoctrine()->getManager();
        $request  = $this->getRequest();
        $locale   = $request->getLocale();
        // we get params
        $NoLayout = $request->query->get('NoLayout');
        // we create the entity
        $entity   = new {{ entity_class }}();
        $form     = $this->createForm(new {{ entity_class }}Type($em, $this->container), $entity, array('show_legend' => false));
        $form->bind($request);
        if ($form->isValid()) {
            $entity->setTranslatableLocale($locale);
            $em->persist($entity);
            $em->flush();
            // to delete cache list query
            $this->deleteAllCacheQuery('hash_{{ route_name_prefix }}');

            {% if 'edit' in actions -%}
                return $this->redirect($this->generateUrl('{{ route_name_prefix }}_edit', array('id' => $entity->getId(), 'NoLayout' => $NoLayout)));
            {% else -%}
                return $this->redirect($this->generateUrl('{{ route_name_prefix }}'));
            {%- endif %}
            
        } else {
        	$this->setFlashErrorMessages($form);
        }

{% if 'annotation' == format %}
        return array(
            'entity'    => $entity,
            'form'      => $form->createView(),
            'NoLayout'  => $NoLayout,
        );
{% else %}
        return $this->render("{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:new.html.twig", array(
            'entity'    => $entity,
            'form'      => $form->createView(),
            'NoLayout'  => $NoLayout,
        ));
{% endif %}
    }
